<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修改HAESF、HGMAE模型Baseline经验</title>
      <link href="/2025-01-03-xiu-gai-haesf-hgmae-mo-xing-baseline-jing-yan.html"/>
      <url>/2025-01-03-xiu-gai-haesf-hgmae-mo-xing-baseline-jing-yan.html</url>
      
        <content type="html"><![CDATA[<p><img src="../images/post_img/project_experience/20250103_HAESF_HGMAE_img.webp" alt="工程经验总结示意图" title="工程经验总结示意图"></p><h1>修改HAESF、HGMAE模型工程经验总结</h1><h2 id="1-主要任务说明">1. 主要任务说明</h2><p>研0第一个小任务，更改Baseline代码读取数据部分，补充一个新的数据集并确保可以运行，跑聚类结果，统计NMI ARI 2个指标，把结果统计到一个表格。</p><p>同时，HAESF与HGMAE作为异质信息网络，是单独使用adjacency_matrix_1, adjacency_matrix_2 作为两个独立的网络。在构建邻接矩阵应当注意。</p><h2 id="2-面临问题">2. 面临问题</h2><h3 id="2-1-pytorch以及dgl环境配置版本问题">2.1 pytorch以及dgl环境配置版本问题</h3><p>提供的配置环境文档存在版本冲突，在import dgl的时候报错：</p><pre class="line-numbers language-false" data-language="false"><code class="language-false"><span class="token variable">i</span><span class="token variable">m</span><span class="token variable">p</span><span class="token variable">o</span><span class="token variable">r</span><span class="token variable">t</span><span class="token variable">e</span><span class="token variable">r</span><span class="token variable">r</span><span class="token variable">o</span><span class="token variable">r</span><span class="token operator">:</span> <span class="token variable">l</span><span class="token variable">i</span><span class="token variable">b</span><span class="token variable">s</span><span class="token variable">s</span><span class="token variable">l</span><span class="token operator">.</span><span class="token variable">s</span><span class="token variable">o</span><span class="token operator">.</span><span class="token number">3</span><span class="token operator">:</span> <span class="token variable">c</span><span class="token variable">a</span><span class="token variable">n</span><span class="token variable">n</span><span class="token variable">o</span><span class="token variable">t</span> <span class="token variable">o</span><span class="token variable">p</span><span class="token variable">e</span><span class="token variable">n</span> <span class="token variable">s</span><span class="token variable">h</span><span class="token variable">a</span><span class="token variable">r</span><span class="token variable">e</span><span class="token variable">d</span> <span class="token variable">o</span><span class="token variable">b</span><span class="token variable">j</span><span class="token variable">e</span><span class="token variable">c</span><span class="token variable">t</span> <span class="token variable">f</span><span class="token variable">i</span><span class="token variable">l</span><span class="token variable">e</span><span class="token operator">:</span> <span class="token variable">n</span><span class="token variable">o</span> <span class="token variable">s</span><span class="token variable">u</span><span class="token variable">c</span><span class="token variable">h</span> <span class="token variable">f</span><span class="token variable">i</span><span class="token variable">l</span><span class="token variable">e</span> <span class="token variable">o</span><span class="token variable">r</span> <span class="token variable">d</span><span class="token variable">i</span><span class="token variable">r</span><span class="token variable">e</span><span class="token variable">c</span><span class="token variable">t</span><span class="token variable">o</span><span class="token variable">r</span><span class="token variable">y</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>正常解决方案：</strong> 针对报错查找解决方式无果，便根据显卡、python版本、cuda版本到官网重新寻找对应库的安装方式</p><p><strong>（torch版本与cuda版本相关，cuda版本与驱动版本相关，驱动版本应看显卡配置）</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># NVIDIA驱动：550（影响不大），CUDA 11.8，显卡：4060ti</span><span class="token comment"># Linux下，dgl需要python2.1以上环境</span><span class="token comment"># PyG is available for Python 3.9 to Python 3.12</span>conda create <span class="token parameter variable">-y</span> <span class="token parameter variable">-n</span> HGMAE_test <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.9</span>conda activate HGMAE_test conda <span class="token function">install</span> <span class="token assign-left variable">pytorch</span><span class="token operator">==</span><span class="token number">2.1</span>.0 <span class="token assign-left variable">torchvision</span><span class="token operator">==</span><span class="token number">0.16</span>.0 <span class="token assign-left variable">torchaudio</span><span class="token operator">==</span><span class="token number">2.1</span>.0 pytorch-cuda<span class="token operator">=</span><span class="token number">11.8</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> nvidia conda <span class="token function">install</span> pyg <span class="token parameter variable">-c</span> pyg conda <span class="token function">install</span> <span class="token parameter variable">-c</span> dglteam/label/th21_cu118 dgl pip <span class="token function">install</span> pyyaml pip <span class="token function">install</span> cdlib <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>https://mirrors.aliyun.com/pypi/simple/<span class="token punctuation">]</span><span class="token punctuation">(</span>https://mirrors.aliyun.com/pypi/simple/<span class="token punctuation">)</span> pip <span class="token function">install</span> munkres<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>小插曲：</strong> 一开始想要更换显卡驱动，在docker的自己的分区删除了所有nvidia*，但在重新安装驱动的时候出现报错，怀疑是只是把自己的分区内的nvidia驱动删除了，导致删除不彻底，导致nvidia-smi都无法运行。</p><p>之后又尝试在服务器图形操作界面更换驱动，并重启，结果导致服务器黑屏，原因是已经进入了ubuntu系统，只是没法加载图形化界面，因为NVIDIA 显卡驱动带来的一系列和ubuntu系统的 GNOME、LightDM 等桌面环境不适配、不兼容。</p><p>然而虽然图形界面没法打开，但是系统是已经开机了，只是docker没有启动，无法用ssh连接到分区的用户名ip</p><p>最终通过ssh 服务器的管理员账号，在全局重装了显卡驱动，得以正常开机，且nvidia-smi能够顺利运行。然而只是把额外的问题解决了，版本冲突的问题还没解决。</p><h3 id="2-2-device问题">2.2 device问题</h3><p>同时启动<code>cuda0</code> 和 <code>cpu</code>，要计算的数据可能一部分在 <code>cpu</code>，一部分在 <code>cuda0 </code>，直接调整方法很简单，即若待计算数据A与B在不同设备，获取A的 <code>device </code>，并将B放置到A的 <code>device</code>                                         。</p><p>进一步的问题是修改何处的 <code>A </code>与 <code>B</code>。最初我运行报错的时候，直接反馈的是代码 <code>model </code>单元的 <code>forward </code>函数的一处计算，直接反应是在函数内进行修改，然而改动的影响太小（即后续另一处函数的某个计算仍可能报错）。</p><p>后面整体思考了一下，改动的只有初始数据接口， <code>debug </code>一下果然在 <code>main </code>函数中转入到 <code>model </code>模块前<code>features</code>和<code>label</code>不在同一个<code>device</code>上，只须修改这里即可。</p><p>进一步思考简单转到一个设备，若设备主存不够应如何处理？目前还未细究。</p><h3 id="2-3-double，float冲突">2.3 double，float冲突</h3><p>要把导入后的数据在tensor中的数据类型统一，这里统一使用<code>.to(torch.float32)</code>改为float型</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
          <category> 工程经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学术 </tag>
            
            <tag> 工程经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站记录</title>
      <link href="/2024-12-25-jian-zhan-ji-lu.html"/>
      <url>/2024-12-25-jian-zhan-ji-lu.html</url>
      
        <content type="html"><![CDATA[<p><img src="../images/post_img/building_record/hexo_github.png" alt="Hexo+Github" title="Hexo+Github IMG"></p><!-- Github + Hexo 建站记录 --><h1>1. 部署方式及理由</h1><p>当前博客采用Github + Hexo的部署方式，选择基于主题Matery进行开发。</p><h2 id="1-1-博客框架优势">1.1 博客框架优势</h2><blockquote><p>Hexo是一个快速、简单且强大的静态博客框架，之所以选择静态博客,主要原因及优势有以下几点:</p><blockquote><p><strong>1. 速度极快:</strong><br>当用户访问博客时，只用从服务器（如nginx）调取编译好的静态资源即可，无需实时从数据库查询获取博文、图片、评论、访问量等资源，效率极高，打开网站的速度会非常快。<br><strong>2.  成本低:</strong><br>市面上有很多开源免费的托管程序（如 gayhub；gitee；coding 等），不用担心高昂的服务器费用。<br><strong>3.  使用体验:</strong><br>可以避免不必要的系统维护，从而能够更加专注于内容本身的建设。<br><strong>4.  安全性:</strong><br>没有数据库、没有后台、完全静态页面，从而避免被数据库注入啊，跨站攻击等网站安全问题。<br>而Hexo与GitHub的结合让博客的搭建和发布变得更加简便高效。</p></blockquote></blockquote><p>只需要配置好Hexo项目的发布路径、GitHub仓库链接和分支，每次生成静态页面后，只需要运行命令进行推送，Hexo会自动将生成的文件推送到GitHub仓库。这大大节省了发布博客的时间和精力。</p><p>此外,还可以轻松地利用 Git 的版本控制功能来管理博客内容。这意味着可以随时恢复到以前的版本，查看和比较不同版本之间的更改。</p><h2 id="1-2-主题选择理由">1.2 主题选择理由</h2><p>本博客目前使用的主题是<a href="https://github.com/blinkfox/hexo-theme-matery" title="matery_link">Matery</a>,由<a href="https://github.com/blinkfox">Blinkfox (闪烁之狐) </a>大佬开发，选择的主要原因是因为我对主页设计的第一印象比较好，符合对个人博客的美观的要求。</p><p>出于对作者工作的尊重，还是在下面列举一下该主题主要特性：</p><ul><li>简单漂亮，文章内容美观易读</li><li>Material Design 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 Banner 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li>词云的标签页和雷达图的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 MathJax</li><li>支持中文繁简转换</li><li>TOC 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li>Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk）</li><li>集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。</li><li>支持 DaoVoice、Tidio 在线聊天功能。</li></ul><h1>2. 部署过程记录</h1><h2 id="2-1-环境准备">2.1 环境准备</h2><p>本地系统版本：</p><blockquote><p>ProductName:macOS<br>ProductVersion:13.3.1</p></blockquote><p>即以下操作指令为在<code>MacOS</code>下的操作指令，对应不同系统可能会略做调整。</p><p>安装 Hexo 首先应当准备好下列应用程序：</p><ul><li><a href="https://nodejs.org/zh-cn" title="Node.js link">node.js</a> （<a href="https://hexo.io/docs/" title="hexo doc link">Hexo官方文档</a>表明，Node.js的版本应至少为 10.13, 推荐安装 12.0 或更高版本）</li><li><a href="https://git-scm.com/" title="git link">git</a></li><li><a href="https://www.npmjs.com/" title="nmp link">nmp</a></li></ul><p>MacOS上，<code>node.js</code>安装指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> node@22<span class="token comment"># verifies the right Node.js version is in the environment  </span><span class="token function">node</span> <span class="token parameter variable">-v</span>     <span class="token comment"># should print `v22.12.0`</span><span class="token comment"># verifies the right npm version is in the environment</span><span class="token function">npm</span> <span class="token parameter variable">-v</span> <span class="token comment"># should print `10.9.0`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>NPM则已经被新版的 <code>Node.js</code> 集成了，而git则默认想要搭建博客的您已经配备。</p><h2 id="问题补充-——针对终端找不到node及npm的问题：">[问题补充]——针对终端找不到node及npm的问题：</h2><p>当运行上述安装指令并查看版本时，有可能出现<code>node: command not found</code>及<code>npm: command not found</code>，解决方案如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1. 确定使用的Shell</span>$ <span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span><span class="token comment"># 如果输出是 /bin/zsh，则使用 ~/.zshrc；如果是 /bin/bash，则使用 ~/.bashrc。</span><span class="token comment"># 2. 编辑对应的配置文件</span>$ <span class="token function">nano</span> ~/.zshrc  <span class="token comment"># 如果是 bash，则运行 nano ~/.bashrc</span><span class="token comment"># 在文件末尾添加以下内容</span>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/usr/local/opt/node@22/bin:<span class="token environment constant">$PATH</span>"</span><span class="token comment"># 3. 保存并退出（Ctrl + O 保存，Ctrl + X 退出）</span><span class="token comment"># 4. 立即生效配置</span>$ <span class="token builtin class-name">source</span> ~/.zshrc  <span class="token comment"># 如果是 bash，则运行 source ~/.bashrc</span><span class="token comment"># 5. 验证路径是否添加成功</span>$ <span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>$ <span class="token function">which</span> <span class="token function">node</span>$ <span class="token function">node</span> <span class="token parameter variable">-v</span><span class="token comment"># 6. 重启终端后再次验证</span>$ <span class="token function">which</span> <span class="token function">node</span>$ <span class="token function">node</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2-安装-Hexo">2.2 安装 Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 <code>npm</code>安装 Hexo。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装</span>$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span class="token comment">#检查版本号</span>$ hexo <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="问题补充-——Hexo更新">[问题补充]——Hexo更新</h3><p>为安装下述Hexo主题，建议安装Hexo 5.0.0 及以上的版本，若已经有一个自己的 Hexo 博客了，建议你将 Hexo 升级到最新稳定的版本。更新方式如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 升级node.js</span><span class="token function">npm</span> <span class="token function">install</span> npm@latest <span class="token parameter variable">-g</span><span class="token comment"># 升级Hexo</span><span class="token comment"># 安装 npm-check 和 npm-upgrade</span><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> npm-check npm-upgrade<span class="token comment"># 检查本地插件版本</span>npm-check<span class="token comment"># 交互式升级，根据提示即可完成升级</span>npm-upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3-创建博客站点">2.3 创建博客站点</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-4-下载主题">2.4 下载主题</h2><pre class="line-numbers language-none"><code class="language-none">$ git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git &#x2F;app&#x2F;themes&#x2F;matery; #这里路径中的app为上述创建的自己的博客文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-5-切换主题">2.5 切换主题</h2><p>将Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><blockquote><p><strong>注</strong>：Hexo初始化之后根目录会创建一个<code>_config.yml</code>文件，而在安装主题Matery后，在<code>/博客根目录/themes/</code> 文件夹下也会创建一个<code>_config.yml</code>文件，注意区分。</p></blockquote><h3 id="2-5-1-config-yml文件的其它修改建议">2.5.1 <code>_config.yml</code>文件的其它修改建议</h3><blockquote><p>这里还是指的根目录的<code>_config.yml</code>文件</p></blockquote><ul><li>修改 <code>_config.yml</code> 的 <code>url</code> 的值为自己的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为<code>6</code>的倍数，如：<code>12、18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h2 id="2-6-新建主题必备页面">2.6 新建主题必备页面</h2><h3 id="2-6-1-新建404页">2.6.1 新建404页</h3><p><code>404</code>页是用来告知浏览者其所请求的页面不存在或链接错误，同时引导用户使用网站其他页面而不是关闭窗口离开，消除用户的挫败感的页面。如果 <code>source</code> 目录下还没有 <code>/404/index.md</code>文件，那么就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new page <span class="token string">"404"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建的<code>404</code>页面输入如下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token number">404</span><span class="token literal-property property">date</span><span class="token operator">:</span> #自己的创建日期<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"404"</span><span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">"404"</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-2-新建分类categories页">2.6.2 新建分类categories页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span><span class="token literal-property property">title</span><span class="token operator">:</span> categories<span class="token literal-property property">date</span><span class="token operator">:</span> #自己的创建日期<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"categories"</span><span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">"categories"</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-3-新建标签-tags-页">2.6.3 新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span><span class="token literal-property property">title</span><span class="token operator">:</span> tags<span class="token literal-property property">date</span><span class="token operator">:</span> #自己的创建日期<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"tags"</span><span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">"tags"</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-4-新建关于我-about-页">2.6.4 新建关于我 about 页</h3><p><code>about</code> 页是用来展示关于我和我的博客信息的页面，如果 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: aboutdate: #自己的创建日期type: &quot;about&quot;layout: &quot;about&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-7-新建文章模板修改">2.7 新建文章模板修改</h2><p>修改文章模板，每次创建文章之后新文章的<code>Front-matte</code>r以及基本内容会按照模板创建，提高编辑效率。</p><p>建议将<code>/scaffolds/post.md</code>修改为如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> title <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> date <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token literal-property property">coverImg</span><span class="token operator">:</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token literal-property property">cover</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token literal-property property">toc</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token literal-property property">mathjax</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token literal-property property">summary</span><span class="token operator">:</span><span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token literal-property property">categories</span><span class="token operator">:</span><span class="token operator">--</span><span class="token operator">-</span>这里为基本内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-8-代码高亮">2.8 代码高亮</h2><p>修改 <code>Hexo</code> 根目录下 <code>_config.yml</code> 文件中 <code>highlight</code>.<code>enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">highlight</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token literal-property property">line_number</span><span class="token operator">:</span> <span class="token boolean">false</span> #初始为<span class="token boolean">true</span>  <span class="token literal-property property">auto_detect</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token literal-property property">tab_replace</span><span class="token operator">:</span> <span class="token string">''</span>  <span class="token literal-property property">wrap</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">hljs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token literal-property property">prismjs</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">line_number</span><span class="token operator">:</span> <span class="token boolean">false</span> #初始为<span class="token boolean">true</span>  <span class="token literal-property property">tab_replace</span><span class="token operator">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里作者博客中说的是<code>line_number</code>的值没有改动，但可能会出现<a href="https://blog.csdn.net/Withdraw_end/article/details/120645255" title="issues_link">issues</a>，如下图所示：</p><p><img src="../images/post_img/building_record/highlight_bug01.jpg" alt="bug_img" title="bug_img"></p><p>因此根据上述链接所示文章，将<code>line_number</code>的值改为<code>false</code>。</p><p>值得注意的是，若要显示高亮，还需要在代码块前添加语言类型的关键字，如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token code"><span class="token punctuation">```</span><span class="token code-language">java</span><span class="token code-block language-java"> private String demo;</span><span class="token punctuation">```</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样才会按照java语法显示高亮。</p><h2 id="2-9-添加文章搜索功能">2.9 添加文章搜索功能</h2><p>搜索功能需要安装插件，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-searchdb <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">search</span><span class="token operator">:</span>  <span class="token literal-property property">path</span><span class="token operator">:</span> search<span class="token punctuation">.</span>xml  <span class="token literal-property property">field</span><span class="token operator">:</span> post  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">format</span><span class="token operator">:</span> html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-10-文章链接转静态短地址">2.10 文章链接转静态短地址</h2><p>如果文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。因此，通过Hexo插件<a href="https://github.com/viko16/hexo-permalink-pinyin" title="hexo-permalink-pinyin link">hexo-permalink-pinyin</a>生成文章时生成中文拼音的永久链接，运行代码进行安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> i hexo-permalink-pinyin <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>并且需要在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">permalink_pinyin</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">separator</span><span class="token operator">:</span> <span class="token string">'-'</span> # <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-11-添加-emoji-表情支持">2.11 添加 emoji 表情支持</h2><p>使用 <code>hexo-filter-github-emojis</code> 的 Hexo 插件来支持 <code>emoji</code> 表情的生成，把对应的 <code>markdown emoji</code> 语法（ <code>::</code> ,例如：<code>:smile:</code> ）转变成会跳跃的emoji表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同时需要在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">githubEmojis</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">className</span><span class="token operator">:</span> github<span class="token operator">-</span>emoji  <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">styles</span><span class="token operator">:</span>  <span class="token literal-property property">customEmojis</span><span class="token operator">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-12-文章字数统计插件">2.12 文章字数统计插件</h2><p>配置Hexo插件，以在文章中显示文章字数、阅读时长信息。安装指令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> i <span class="token parameter variable">--save</span> hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在<strong>本主题下的</strong> <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">wordCount</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">false</span> # 将这个值设置为 <span class="token boolean">true</span> 即可<span class="token punctuation">.</span>  <span class="token literal-property property">postWordCount</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">min2read</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">totalCount</span><span class="token operator">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-13-部署轻量级博客评论系统">2.13 部署轻量级博客评论系统</h2><p>Valine 诞生于2017年8月7日，是一款基于<a href="https://www.leancloud.cn/" title="leancloud link">LeanCloud</a>的快速、简洁且高效的无后端评论系统。</p><p>由于Valine是基于LeanCloud服务的，数据都在LeanCloud存储。因此需要注册个LeanCloud才能使用。下面为基本的注册流程。</p><blockquote><ol><li>在<a href="https://www.leancloud.cn/" title="leancloud link">LeanCloud</a>用邮箱注册登录，需要实名制认证，邮箱认证。</li><li>创建应用,命名为<code>blog</code>，方案选择开发版，即可以在一定的用量限制下免费运行。</li><li>进入创建好的应用&gt;设置&gt;选择应用 <code>Key</code>，就能获取到 <code>App ID</code> 和 <code>App Key</code>，以待后续使用</li><li>(optional) 如果有自己的域名，还可以进入应用中心绑定你的个人博客域名</li></ol></blockquote><p>在此之后，还需要去主题配置文件<code>_config.yml</code>中进行修改。<br>在主题配置找到以下参数进行修改：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"># Valine<span class="token punctuation">.</span># You can <span class="token keyword">get</span> your appid and appkey from https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>leancloud<span class="token punctuation">.</span>cn# more info please open https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>valine<span class="token punctuation">.</span>js<span class="token punctuation">.</span>org<span class="token literal-property property">valine</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//打开valine评论功能</span>  <span class="token literal-property property">appid</span><span class="token operator">:</span> 你的leancloud appid   <span class="token literal-property property">appkey</span><span class="token operator">:</span> 你的leancloud appkey   <span class="token literal-property property">notify</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">//邮件提醒</span>  <span class="token literal-property property">verify</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//评论时是否有验证码，需要在Leancloud 设置->安全中心 中打开</span>  <span class="token literal-property property">placeholder</span><span class="token operator">:</span> 说点什么吧！ <span class="token comment">//评论框默认显示</span>  <span class="token literal-property property">avatar</span><span class="token operator">:</span> hide <span class="token comment">//评论者的头像,我这里设置的不显示</span>  <span class="token literal-property property">guest_info</span><span class="token operator">:</span> nick # custom comment header  <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span> # pagination size<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到这里，一个基本的博客便创建完成。</p><h1>3.参考文章</h1><p>文章参考来源如下：</p><p><a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-8">Matery主题的开发者 示例网站</a></p><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Matery主题 Github中文文档</a></p><p><a href="https://blog.17lai.site/">夜法之书大佬博客</a></p><p><a href="https://hexo.io/zh-cn/">hexo官网</a></p><blockquote><p><strong>提示</strong>：确保在使用他人网址时，遵循相关的版权和引用规范。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> Matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
